<Application x:Class="TwitchWatcher.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             ShutdownMode="OnMainWindowClose">
    <Application.Resources>

        <!-- ===== Color palette ===== -->
        <Color x:Key="Clr.BaseBg">#1E1F22</Color>
        <Color x:Key="Clr.PanelBg">#2B2D31</Color>
        <Color x:Key="Clr.Border">#3A3B3F</Color>
        <Color x:Key="Clr.Accent">#6AA0FF</Color>
        <Color x:Key="Clr.AccentHover">#80ADFF</Color>
        <Color x:Key="Clr.Text">#F2F2F2</Color>
        <Color x:Key="Clr.TextDim">#C5C6C7</Color>
        <Color x:Key="Clr.Success">#22C55E</Color>
        <Color x:Key="Clr.Danger">#EF4444</Color>
        <Color x:Key="Clr.RowHover">#33353A</Color>
        <Color x:Key="Clr.Selection">#3D5A9E</Color>
        <Color x:Key="Clr.Live">#FF0000</Color>

        <!-- ===== Brushes ===== -->
        <SolidColorBrush x:Key="Brush.BaseBg" Color="{StaticResource Clr.BaseBg}"/>
        <SolidColorBrush x:Key="Brush.PanelBg" Color="{StaticResource Clr.PanelBg}"/>
        <SolidColorBrush x:Key="Brush.Border"  Color="{StaticResource Clr.Border}"/>
        <SolidColorBrush x:Key="Brush.Accent"  Color="{StaticResource Clr.Accent}"/>
        <SolidColorBrush x:Key="Brush.AccentHover" Color="{StaticResource Clr.AccentHover}"/>
        <SolidColorBrush x:Key="Brush.Text"    Color="{StaticResource Clr.Text}"/>
        <SolidColorBrush x:Key="Brush.TextDim" Color="{StaticResource Clr.TextDim}"/>
        <SolidColorBrush x:Key="Brush.Success" Color="{StaticResource Clr.Success}"/>
        <SolidColorBrush x:Key="Brush.Danger"  Color="{StaticResource Clr.Danger}"/>
        <SolidColorBrush x:Key="Brush.RowHover" Color="{StaticResource Clr.RowHover}"/>
        <SolidColorBrush x:Key="Brush.Selection" Color="{StaticResource Clr.Selection}"/>
        <SolidColorBrush x:Key="Brush.Live" Color="{StaticResource Clr.Live}"/>

        <!-- Global defaults -->
        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource Brush.BaseBg}"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <!-- ===== Button (primary) ===== -->
        <Style x:Key="AccentButton" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                    CornerRadius="8">
                            <ContentPresenter Margin="4,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Brush.AccentHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ===== Button (neutral / outline) ===== -->
        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource AccentButton}">
            <Setter Property="Background" Value="{StaticResource Brush.PanelBg}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8">
                            <ContentPresenter Margin="4,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Brush.Danger}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.45"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource AccentButton}">
            <Setter Property="Background" Value="{StaticResource Brush.PanelBg}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8">
                            <ContentPresenter Margin="4,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Brush.Success}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.45"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ===== TextBox ===== -->
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="Background" Value="{StaticResource Brush.PanelBg}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="CaretBrush" Value="{StaticResource Brush.Text}"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8"
                    SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ===== DataGrid (dark) ===== -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource Brush.PanelBg}"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource Brush.PanelBg}"/>
            <Setter Property="AlternatingRowBackground" Value="#292B30"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource Brush.Border}"/>
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource Brush.Border}"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="Margin" Value="20,20"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#232529"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.TextDim}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="20,8"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>

            <Style.Triggers>
                <!-- When the cell itself is selected, keep it transparent -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>

                <!-- When the whole row is selected, keep cells transparent too -->
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </DataTrigger>

                <!-- Also don't tint on hover at the cell level -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- 1) Remove default white ToolTip chrome -->
        <Style TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HasDropShadow" Value="False"/>
            <!--Setter Property="AllowsTransparency" Value="True"/-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <!-- Only render the content you provide (your dark Border) -->
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 2) TextBox style used inside the tooltip: no border, no focus visual -->
        <Style x:Key="ToolTipTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <!-- Minimal host; nothing else paints -->
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="DataGridRow">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <!--Setter Property="Background" Value="{StaticResource Brush.PanelBg}"/-->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="4,2"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="ToolTip" Value="{x:Null}"/>
            <Setter Property="ToolTipService.Placement" Value="Mouse"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridRow">
                        <!--Border x:Name="Bg" Background="{TemplateBinding Background}"-->
                            <Border x:Name="Bg" 
                                    CornerRadius="8"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True"
                                    ClipToBounds="True">
                                <DataGridCellsPresenter/>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bg" Property="Background" Value="{StaticResource Brush.RowHover}"/>
                                <Setter TargetName="Bg" Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bg"  Property="Background" Value="#2E3E61"/>
                                <Setter TargetName="Bg" Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bg" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <!--Setter Property="ToolTipService.Placement" Value="Mouse"/>
            <Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip StaysOpen="True" MaxWidth="600">
                        <Border Padding="8" CornerRadius="6" Background="{StaticResource Brush.PanelBg}" BorderBrush="{StaticResource Brush.Border}" BorderThickness="1">
                            <TextBox Style="{StaticResource ToolTipTextBoxStyle}"
                                       Text="{Binding Title}"
                                       IsReadOnly="True"
                                       TextWrapping="WrapWithOverflow"
                                       AcceptsReturn="True"
                                       MaxWidth="560"
                                       Focusable="False"/>
                        </Border>
                    </ToolTip>
                </Setter.Value>
            </Setter-->

            <Style.Triggers>
                <!-- Only when the row's State == Live do we create the tooltip -->
                <DataTrigger Binding="{Binding State}" Value="Live">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <ToolTip StaysOpen="True" MaxWidth="600">
                                <Border Padding="18"
                                CornerRadius="6"
                                Background="{StaticResource Brush.PanelBg}"
                                BorderBrush="{StaticResource Brush.Border}"
                                BorderThickness="1">
                                    <TextBox Style="{StaticResource ToolTipTextBoxStyle}"
                                     Text="{Binding Title}"
                                     IsReadOnly="True"
                                     TextWrapping="WrapWithOverflow"
                                     AcceptsReturn="True"
                                     MaxWidth="560"/>
                                </Border>
                            </ToolTip>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>

        </Style>

        <!-- Small circle used for state dots -->
        <Style x:Key="StateDot" TargetType="Ellipse">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Fill" Value="Gray"/>
            <Setter Property="Margin" Value="0,0,6,0"/>
        </Style>

    </Application.Resources>
</Application>